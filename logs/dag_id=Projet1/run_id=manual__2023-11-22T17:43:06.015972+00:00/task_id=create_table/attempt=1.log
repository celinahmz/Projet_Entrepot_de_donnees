[2023-11-22T17:43:14.861+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Projet1.create_table manual__2023-11-22T17:43:06.015972+00:00 [queued]>
[2023-11-22T17:43:14.875+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Projet1.create_table manual__2023-11-22T17:43:06.015972+00:00 [queued]>
[2023-11-22T17:43:14.876+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-22T17:43:14.920+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_table> on 2023-11-22 17:43:06.015972+00:00
[2023-11-22T17:43:14.944+0000] {standard_task_runner.py:57} INFO - Started process 3880 to run task
[2023-11-22T17:43:14.951+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Projet1', 'create_table', 'manual__2023-11-22T17:43:06.015972+00:00', '--job-id', '423', '--raw', '--subdir', 'DAGS_FOLDER/Projet.py', '--cfg-path', '/tmp/tmpgcic4h0s']
[2023-11-22T17:43:14.956+0000] {standard_task_runner.py:85} INFO - Job 423: Subtask create_table
[2023-11-22T17:43:15.259+0000] {task_command.py:416} INFO - Running <TaskInstance: Projet1.create_table manual__2023-11-22T17:43:06.015972+00:00 [running]> on host b36ebcee5948
[2023-11-22T17:43:15.701+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='Projet1' AIRFLOW_CTX_TASK_ID='create_table' AIRFLOW_CTX_EXECUTION_DATE='2023-11-22T17:43:06.015972+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-22T17:43:06.015972+00:00'
[2023-11-22T17:43:15.713+0000] {sql.py:274} INFO - Executing: -- uppresion des tables s'ils existent : 

DROP TABLE IF EXISTS "Urgences";
DROP TABLE IF EXISTS "Age";
DROP TABLE IF EXISTS "Departements";

-- Création des tables :


CREATE TABLE "Departements"
(
    num_dep integer PRIMARY KEY,
    dep_name VARCHAR(255),
    region_name VARCHAR(255)
);

CREATE TABLE "Age"
(
   Code_age int primary KEY,
   age VARCHAR(255)
);

CREATE TABLE "Urgences"(
    dep integer ,
    sursaud_cl_age_corona VARCHAR(255), 
    nbre_pass_corona FLOAT, 
    nbre_pass_tot FLOAT, 
    nbre_hospit_corona FLOAT,
    nbre_pass_corona_h FLOAT, 
    nbre_pass_corona_f FLOAT, 
    nbre_pass_tot_h FLOAT, 
    nbre_pass_tot_f FLOAT,
    nbre_hospit_corona_h FLOAT, 
    nbre_hospit_corona_f FLOAT, 
    nbre_acte_corona FLOAT, 
    nbre_acte_tot FLOAT,
    nbre_acte_corona_h FLOAT, 
    nbre_acte_corona_f FLOAT, 
    nbre_acte_tot_h FLOAT, 
    nbre_acte_tot_f FLOAT
);


-- --code qui marche pour la creation et l'alimentation
-- CREATE TABLE IF NOT EXISTS "Urgences"(
--     dep integer ,
--     sursaud_cl_age_corona VARCHAR(255), 
--     nbre_pass_corona FLOAT, 
--     nbre_pass_tot FLOAT, 
--     nbre_hospit_corona FLOAT,
--     nbre_pass_corona_h FLOAT, 
--     nbre_pass_corona_f FLOAT, 
--     nbre_pass_tot_h FLOAT, 
--     nbre_pass_tot_f FLOAT,
--     nbre_hospit_corona_h FLOAT, 
--     nbre_hospit_corona_f FLOAT, 
--     nbre_acte_corona FLOAT, 
--     nbre_acte_tot FLOAT,
--     nbre_acte_corona_h FLOAT, 
--     nbre_acte_corona_f FLOAT, 
--     nbre_acte_tot_h FLOAT, 
--     nbre_acte_tot_f FLOAT
-- );

-- CREATE TABLE IF NOT EXISTS "Departements"
-- (
--     num_dep integer ,
--     dep_name VARCHAR(255),
--     region_name VARCHAR(255)
-- );


-- CREATE TABLE IF NOT EXISTS "Age"
-- (
--    Code_age VARCHAR(255),
--    age VARCHAR(255)
-- );






-- -- Supprimer la contrainte de clé étrangère dans "Urgences" si elle existe
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS Urgences_dep_fkey CASCADE;

-- --Supprimer la contrainte de clé étrangère dans "Urgences" si elle existe
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS Urgences_dep_fkey1 CASCADE;
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS "Urgences_sursaud_cl_age_corona_fkey";


-- -- Supprimer la table "Urgences" si elle existe
-- DROP TABLE IF EXISTS "Urgences" CASCADE;

-- --Supprimer la table "Departements" si elle existe
-- DROP TABLE IF EXISTS "Departements" CASCADE;
-- DROP TABLE IF EXISTS "Age" CASCADE;

-- --Supprimer la table "Age" si elle existe
-- --pour la suppression des tables et ça fonctionne trés bien: 
-- DROP TABLE IF EXISTS "De" CASCADE;

-- DROP TABLE IF EXISTS "D" CASCADE;

-- DROP TABLE IF EXISTS "Dep";
-- DROP TABLE IF EXISTS "d";
-- DROP TABLE IF EXISTS "departements";
-- DROP TABLE IF EXISTS "prix";
-- DROP TABLE IF EXISTS "urgences";


[2023-11-22T17:43:15.752+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-22T17:43:15.810+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-22T17:43:15.868+0000] {sql.py:418} INFO - Running statement: -- uppresion des tables s'ils existent : 

DROP TABLE IF EXISTS "Urgences";
DROP TABLE IF EXISTS "Age";
DROP TABLE IF EXISTS "Departements";

-- Création des tables :


CREATE TABLE "Departements"
(
    num_dep integer PRIMARY KEY,
    dep_name VARCHAR(255),
    region_name VARCHAR(255)
);

CREATE TABLE "Age"
(
   Code_age int primary KEY,
   age VARCHAR(255)
);

CREATE TABLE "Urgences"(
    dep integer ,
    sursaud_cl_age_corona VARCHAR(255), 
    nbre_pass_corona FLOAT, 
    nbre_pass_tot FLOAT, 
    nbre_hospit_corona FLOAT,
    nbre_pass_corona_h FLOAT, 
    nbre_pass_corona_f FLOAT, 
    nbre_pass_tot_h FLOAT, 
    nbre_pass_tot_f FLOAT,
    nbre_hospit_corona_h FLOAT, 
    nbre_hospit_corona_f FLOAT, 
    nbre_acte_corona FLOAT, 
    nbre_acte_tot FLOAT,
    nbre_acte_corona_h FLOAT, 
    nbre_acte_corona_f FLOAT, 
    nbre_acte_tot_h FLOAT, 
    nbre_acte_tot_f FLOAT
);


-- --code qui marche pour la creation et l'alimentation
-- CREATE TABLE IF NOT EXISTS "Urgences"(
--     dep integer ,
--     sursaud_cl_age_corona VARCHAR(255), 
--     nbre_pass_corona FLOAT, 
--     nbre_pass_tot FLOAT, 
--     nbre_hospit_corona FLOAT,
--     nbre_pass_corona_h FLOAT, 
--     nbre_pass_corona_f FLOAT, 
--     nbre_pass_tot_h FLOAT, 
--     nbre_pass_tot_f FLOAT,
--     nbre_hospit_corona_h FLOAT, 
--     nbre_hospit_corona_f FLOAT, 
--     nbre_acte_corona FLOAT, 
--     nbre_acte_tot FLOAT,
--     nbre_acte_corona_h FLOAT, 
--     nbre_acte_corona_f FLOAT, 
--     nbre_acte_tot_h FLOAT, 
--     nbre_acte_tot_f FLOAT
-- );

-- CREATE TABLE IF NOT EXISTS "Departements"
-- (
--     num_dep integer ,
--     dep_name VARCHAR(255),
--     region_name VARCHAR(255)
-- );


-- CREATE TABLE IF NOT EXISTS "Age"
-- (
--    Code_age VARCHAR(255),
--    age VARCHAR(255)
-- );






-- -- Supprimer la contrainte de clé étrangère dans "Urgences" si elle existe
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS Urgences_dep_fkey CASCADE;

-- --Supprimer la contrainte de clé étrangère dans "Urgences" si elle existe
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS Urgences_dep_fkey1 CASCADE;
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS "Urgences_sursaud_cl_age_corona_fkey";


-- -- Supprimer la table "Urgences" si elle existe
-- DROP TABLE IF EXISTS "Urgences" CASCADE;

-- --Supprimer la table "Departements" si elle existe
-- DROP TABLE IF EXISTS "Departements" CASCADE;
-- DROP TABLE IF EXISTS "Age" CASCADE;

-- --Supprimer la table "Age" si elle existe
-- --pour la suppression des tables et ça fonctionne trés bien: 
-- DROP TABLE IF EXISTS "De" CASCADE;

-- DROP TABLE IF EXISTS "D" CASCADE;

-- DROP TABLE IF EXISTS "Dep";
-- DROP TABLE IF EXISTS "d";
-- DROP TABLE IF EXISTS "departements";
-- DROP TABLE IF EXISTS "prix";
-- DROP TABLE IF EXISTS "urgences";

, parameters: None
[2023-11-22T17:43:16.127+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=Projet1, task_id=create_table, execution_date=20231122T174306, start_date=20231122T174314, end_date=20231122T174316
[2023-11-22T17:43:16.271+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2023-11-22T17:43:16.351+0000] {taskinstance.py:2778} INFO - 1 downstream tasks scheduled from follow-on schedule check
