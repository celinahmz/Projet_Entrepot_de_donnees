[2023-11-22T13:52:10.708+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Projet1.create_table manual__2023-11-22T13:52:03.955324+00:00 [queued]>
[2023-11-22T13:52:10.823+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Projet1.create_table manual__2023-11-22T13:52:03.955324+00:00 [queued]>
[2023-11-22T13:52:10.825+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-22T13:52:10.882+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_table> on 2023-11-22 13:52:03.955324+00:00
[2023-11-22T13:52:10.899+0000] {standard_task_runner.py:57} INFO - Started process 476 to run task
[2023-11-22T13:52:10.905+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Projet1', 'create_table', 'manual__2023-11-22T13:52:03.955324+00:00', '--job-id', '369', '--raw', '--subdir', 'DAGS_FOLDER/Projet.py', '--cfg-path', '/tmp/tmpikt47k02']
[2023-11-22T13:52:10.910+0000] {standard_task_runner.py:85} INFO - Job 369: Subtask create_table
[2023-11-22T13:52:11.102+0000] {task_command.py:416} INFO - Running <TaskInstance: Projet1.create_table manual__2023-11-22T13:52:03.955324+00:00 [running]> on host b36ebcee5948
[2023-11-22T13:52:11.467+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='Projet1' AIRFLOW_CTX_TASK_ID='create_table' AIRFLOW_CTX_EXECUTION_DATE='2023-11-22T13:52:03.955324+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-22T13:52:03.955324+00:00'
[2023-11-22T13:52:11.489+0000] {sql.py:274} INFO - Executing: 
-- DROP TABLE IF EXISTS "Urgences";

-- CREATE TABLE IF NOT EXISTS "Urgences"(
--     dep VARCHAR(255),
--     sursaud_cl_age_corona VARCHAR(255), 
--     nbre_pass_corona FLOAT, 
--     nbre_pass_tot FLOAT, 
--     nbre_hospit_corona FLOAT,
--     nbre_pass_corona_h FLOAT, 
--     nbre_pass_corona_f FLOAT, 
--     nbre_pass_tot_h FLOAT, 
--     nbre_pass_tot_f FLOAT,
--     nbre_hospit_corona_h FLOAT, 
--     nbre_hospit_corona_f FLOAT, 
--     nbre_acte_corona FLOAT, 
--     nbre_acte_tot FLOAT,
--     nbre_acte_corona_h FLOAT, 
--     nbre_acte_corona_f FLOAT, 
--     nbre_acte_tot_h FLOAT, 
--     nbre_acte_tot_f FLOAT,
--     FOREIGN KEY (dep) REFERENCES "Departements"(num_dep),
--     FOREIGN KEY (sursaud_cl_age_corona) REFERENCES "Age"(Code_age)
-- );

-- DROP TABLE IF EXISTS "Departements";
-- CREATE TABLE IF NOT EXISTS "Departements"
-- (
--     num_dep VARCHAR(255) PRIMARY KEY,
--     dep_name VARCHAR(255),
--     region_name VARCHAR(255)
-- );


-- DROP TABLE IF EXISTS "Age";

-- CREATE TABLE IF NOT EXISTS "Age"
-- (
--    Code_age VARCHAR(255) PRIMARY KEY,
--    age VARCHAR(255)
-- );
-- Créer la nouvelle table "Departements"
CREATE TABLE "Departements" (
    num_dep VARCHAR(255) PRIMARY KEY,
    dep_name VARCHAR(255),
    region_name VARCHAR(255)
);

-- Créer la nouvelle table "Age"
CREATE TABLE "Age" (
   Code_age VARCHAR(255) PRIMARY KEY,
   age VARCHAR(255)
);

-- Créer la nouvelle table "Urgences" avec les clés étrangères
CREATE TABLE "Urgences" (
    dep VARCHAR(255) REFERENCES "Departements"(num_dep),
    sursaud_cl_age_corona VARCHAR(255), 
    nbre_pass_corona FLOAT, 
    nbre_pass_tot FLOAT, 
    nbre_hospit_corona FLOAT,
    nbre_pass_corona_h FLOAT, 
    nbre_pass_corona_f FLOAT, 
    nbre_pass_tot_h FLOAT, 
    nbre_pass_tot_f FLOAT,
    nbre_hospit_corona_h FLOAT, 
    nbre_hospit_corona_f FLOAT, 
    nbre_acte_corona FLOAT, 
    nbre_acte_tot FLOAT,
    nbre_acte_corona_h FLOAT, 
    nbre_acte_corona_f FLOAT, 
    nbre_acte_tot_h FLOAT, 
    nbre_acte_tot_f FLOAT,
    FOREIGN KEY (dep) REFERENCES "Departements"(num_dep),
    FOREIGN KEY (sursaud_cl_age_corona) REFERENCES "Age"(Code_age)
);




[2023-11-22T13:52:11.519+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-22T13:52:11.536+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-22T13:52:11.595+0000] {sql.py:418} INFO - Running statement: 
-- DROP TABLE IF EXISTS "Urgences";

-- CREATE TABLE IF NOT EXISTS "Urgences"(
--     dep VARCHAR(255),
--     sursaud_cl_age_corona VARCHAR(255), 
--     nbre_pass_corona FLOAT, 
--     nbre_pass_tot FLOAT, 
--     nbre_hospit_corona FLOAT,
--     nbre_pass_corona_h FLOAT, 
--     nbre_pass_corona_f FLOAT, 
--     nbre_pass_tot_h FLOAT, 
--     nbre_pass_tot_f FLOAT,
--     nbre_hospit_corona_h FLOAT, 
--     nbre_hospit_corona_f FLOAT, 
--     nbre_acte_corona FLOAT, 
--     nbre_acte_tot FLOAT,
--     nbre_acte_corona_h FLOAT, 
--     nbre_acte_corona_f FLOAT, 
--     nbre_acte_tot_h FLOAT, 
--     nbre_acte_tot_f FLOAT,
--     FOREIGN KEY (dep) REFERENCES "Departements"(num_dep),
--     FOREIGN KEY (sursaud_cl_age_corona) REFERENCES "Age"(Code_age)
-- );

-- DROP TABLE IF EXISTS "Departements";
-- CREATE TABLE IF NOT EXISTS "Departements"
-- (
--     num_dep VARCHAR(255) PRIMARY KEY,
--     dep_name VARCHAR(255),
--     region_name VARCHAR(255)
-- );


-- DROP TABLE IF EXISTS "Age";

-- CREATE TABLE IF NOT EXISTS "Age"
-- (
--    Code_age VARCHAR(255) PRIMARY KEY,
--    age VARCHAR(255)
-- );
-- Créer la nouvelle table "Departements"
CREATE TABLE "Departements" (
    num_dep VARCHAR(255) PRIMARY KEY,
    dep_name VARCHAR(255),
    region_name VARCHAR(255)
);

-- Créer la nouvelle table "Age"
CREATE TABLE "Age" (
   Code_age VARCHAR(255) PRIMARY KEY,
   age VARCHAR(255)
);

-- Créer la nouvelle table "Urgences" avec les clés étrangères
CREATE TABLE "Urgences" (
    dep VARCHAR(255) REFERENCES "Departements"(num_dep),
    sursaud_cl_age_corona VARCHAR(255), 
    nbre_pass_corona FLOAT, 
    nbre_pass_tot FLOAT, 
    nbre_hospit_corona FLOAT,
    nbre_pass_corona_h FLOAT, 
    nbre_pass_corona_f FLOAT, 
    nbre_pass_tot_h FLOAT, 
    nbre_pass_tot_f FLOAT,
    nbre_hospit_corona_h FLOAT, 
    nbre_hospit_corona_f FLOAT, 
    nbre_acte_corona FLOAT, 
    nbre_acte_tot FLOAT,
    nbre_acte_corona_h FLOAT, 
    nbre_acte_corona_f FLOAT, 
    nbre_acte_tot_h FLOAT, 
    nbre_acte_tot_f FLOAT,
    FOREIGN KEY (dep) REFERENCES "Departements"(num_dep),
    FOREIGN KEY (sursaud_cl_age_corona) REFERENCES "Age"(Code_age)
);



, parameters: None
[2023-11-22T13:52:11.611+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/operators/sql.py", line 280, in execute
    output = hook.run(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 392, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 423, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.DuplicateTable: relation "Departements" already exists

[2023-11-22T13:52:11.661+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=Projet1, task_id=create_table, execution_date=20231122T135203, start_date=20231122T135210, end_date=20231122T135211
[2023-11-22T13:52:11.683+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 369 for task create_table (relation "Departements" already exists
; 476)
[2023-11-22T13:52:11.729+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-11-22T13:52:11.797+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
