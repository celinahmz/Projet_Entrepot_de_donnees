[2023-11-22T16:57:56.198+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Projet1.create_table manual__2023-11-22T16:57:49.003294+00:00 [queued]>
[2023-11-22T16:57:56.212+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Projet1.create_table manual__2023-11-22T16:57:49.003294+00:00 [queued]>
[2023-11-22T16:57:56.214+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-22T16:57:56.243+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_table> on 2023-11-22 16:57:49.003294+00:00
[2023-11-22T16:57:56.250+0000] {standard_task_runner.py:57} INFO - Started process 3222 to run task
[2023-11-22T16:57:56.257+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Projet1', 'create_table', 'manual__2023-11-22T16:57:49.003294+00:00', '--job-id', '414', '--raw', '--subdir', 'DAGS_FOLDER/Projet.py', '--cfg-path', '/tmp/tmpk94x_93s']
[2023-11-22T16:57:56.259+0000] {standard_task_runner.py:85} INFO - Job 414: Subtask create_table
[2023-11-22T16:57:56.318+0000] {task_command.py:416} INFO - Running <TaskInstance: Projet1.create_table manual__2023-11-22T16:57:49.003294+00:00 [running]> on host b36ebcee5948
[2023-11-22T16:57:56.427+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='Projet1' AIRFLOW_CTX_TASK_ID='create_table' AIRFLOW_CTX_EXECUTION_DATE='2023-11-22T16:57:49.003294+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-22T16:57:49.003294+00:00'
[2023-11-22T16:57:56.430+0000] {sql.py:274} INFO - Executing: -- Suppresion des tables s'ils existent : 

DROP TABLE IF EXISTS "Urgences";
DROP TABLE IF EXISTS "Age";
DROP TABLE IF EXISTS "Departements";

--Création des tables :


CREATE TABLE "Departements"
(
    num_dep VARCHAR(255) ,
    dep_name VARCHAR(255),
    region_name VARCHAR(255)
);

CREATE TABLE "Age"
(
   Code_age VARCHAR(255) 
   age VARCHAR(255)
);

CREATE TABLE "Urgences"(
    dep VARCHAR(255),
    sursaud_cl_age_corona VARCHAR(255), 
    nbre_pass_corona FLOAT, 
    nbre_pass_tot FLOAT, 
    nbre_hospit_corona FLOAT,
    nbre_pass_corona_h FLOAT, 
    nbre_pass_corona_f FLOAT, 
    nbre_pass_tot_h FLOAT, 
    nbre_pass_tot_f FLOAT,
    nbre_hospit_corona_h FLOAT, 
    nbre_hospit_corona_f FLOAT, 
    nbre_acte_corona FLOAT, 
    nbre_acte_tot FLOAT,
    nbre_acte_corona_h FLOAT, 
    nbre_acte_corona_f FLOAT, 
    nbre_acte_tot_h FLOAT, 
    nbre_acte_tot_f FLOAT
);


--code qui marche pour la creation et l'alimentation
-- CREATE TABLE IF NOT EXISTS "Urgences"(
--     dep VARCHAR(255),
--     sursaud_cl_age_corona VARCHAR(255), 
--     nbre_pass_corona FLOAT, 
--     nbre_pass_tot FLOAT, 
--     nbre_hospit_corona FLOAT,
--     nbre_pass_corona_h FLOAT, 
--     nbre_pass_corona_f FLOAT, 
--     nbre_pass_tot_h FLOAT, 
--     nbre_pass_tot_f FLOAT,
--     nbre_hospit_corona_h FLOAT, 
--     nbre_hospit_corona_f FLOAT, 
--     nbre_acte_corona FLOAT, 
--     nbre_acte_tot FLOAT,
--     nbre_acte_corona_h FLOAT, 
--     nbre_acte_corona_f FLOAT, 
--     nbre_acte_tot_h FLOAT, 
--     nbre_acte_tot_f FLOAT
-- );

-- CREATE TABLE IF NOT EXISTS "Departements"
-- (
--     num_dep VARCHAR(255) ,
--     dep_name VARCHAR(255),
--     region_name VARCHAR(255)
-- );


-- CREATE TABLE IF NOT EXISTS "Age"
-- (
--    Code_age VARCHAR(255),
--    age VARCHAR(255)
-- );






-- -- Supprimer la contrainte de clé étrangère dans "Urgences" si elle existe
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS Urgences_dep_fkey CASCADE;

-- --Supprimer la contrainte de clé étrangère dans "Urgences" si elle existe
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS Urgences_dep_fkey1 CASCADE;
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS "Urgences_sursaud_cl_age_corona_fkey";


-- -- Supprimer la table "Urgences" si elle existe
-- DROP TABLE IF EXISTS "Urgences" CASCADE;

-- --Supprimer la table "Departements" si elle existe
-- DROP TABLE IF EXISTS "Departements" CASCADE;
-- DROP TABLE IF EXISTS "Age" CASCADE;

-- --Supprimer la table "Age" si elle existe
-- --pour la suppression des tables et ça fonctionne trés bien: 
-- DROP TABLE IF EXISTS "De" CASCADE;

-- DROP TABLE IF EXISTS "D" CASCADE;

-- DROP TABLE IF EXISTS "Dep";
-- DROP TABLE IF EXISTS "d";
-- DROP TABLE IF EXISTS "departements";
-- DROP TABLE IF EXISTS "prix";
-- DROP TABLE IF EXISTS "urgences";


[2023-11-22T16:57:56.444+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-22T16:57:56.454+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-22T16:57:56.534+0000] {sql.py:418} INFO - Running statement: -- Suppresion des tables s'ils existent : 

DROP TABLE IF EXISTS "Urgences";
DROP TABLE IF EXISTS "Age";
DROP TABLE IF EXISTS "Departements";

--Création des tables :


CREATE TABLE "Departements"
(
    num_dep VARCHAR(255) ,
    dep_name VARCHAR(255),
    region_name VARCHAR(255)
);

CREATE TABLE "Age"
(
   Code_age VARCHAR(255) 
   age VARCHAR(255)
);

CREATE TABLE "Urgences"(
    dep VARCHAR(255),
    sursaud_cl_age_corona VARCHAR(255), 
    nbre_pass_corona FLOAT, 
    nbre_pass_tot FLOAT, 
    nbre_hospit_corona FLOAT,
    nbre_pass_corona_h FLOAT, 
    nbre_pass_corona_f FLOAT, 
    nbre_pass_tot_h FLOAT, 
    nbre_pass_tot_f FLOAT,
    nbre_hospit_corona_h FLOAT, 
    nbre_hospit_corona_f FLOAT, 
    nbre_acte_corona FLOAT, 
    nbre_acte_tot FLOAT,
    nbre_acte_corona_h FLOAT, 
    nbre_acte_corona_f FLOAT, 
    nbre_acte_tot_h FLOAT, 
    nbre_acte_tot_f FLOAT
);


--code qui marche pour la creation et l'alimentation
-- CREATE TABLE IF NOT EXISTS "Urgences"(
--     dep VARCHAR(255),
--     sursaud_cl_age_corona VARCHAR(255), 
--     nbre_pass_corona FLOAT, 
--     nbre_pass_tot FLOAT, 
--     nbre_hospit_corona FLOAT,
--     nbre_pass_corona_h FLOAT, 
--     nbre_pass_corona_f FLOAT, 
--     nbre_pass_tot_h FLOAT, 
--     nbre_pass_tot_f FLOAT,
--     nbre_hospit_corona_h FLOAT, 
--     nbre_hospit_corona_f FLOAT, 
--     nbre_acte_corona FLOAT, 
--     nbre_acte_tot FLOAT,
--     nbre_acte_corona_h FLOAT, 
--     nbre_acte_corona_f FLOAT, 
--     nbre_acte_tot_h FLOAT, 
--     nbre_acte_tot_f FLOAT
-- );

-- CREATE TABLE IF NOT EXISTS "Departements"
-- (
--     num_dep VARCHAR(255) ,
--     dep_name VARCHAR(255),
--     region_name VARCHAR(255)
-- );


-- CREATE TABLE IF NOT EXISTS "Age"
-- (
--    Code_age VARCHAR(255),
--    age VARCHAR(255)
-- );






-- -- Supprimer la contrainte de clé étrangère dans "Urgences" si elle existe
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS Urgences_dep_fkey CASCADE;

-- --Supprimer la contrainte de clé étrangère dans "Urgences" si elle existe
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS Urgences_dep_fkey1 CASCADE;
-- ALTER TABLE "Urgences" DROP CONSTRAINT IF EXISTS "Urgences_sursaud_cl_age_corona_fkey";


-- -- Supprimer la table "Urgences" si elle existe
-- DROP TABLE IF EXISTS "Urgences" CASCADE;

-- --Supprimer la table "Departements" si elle existe
-- DROP TABLE IF EXISTS "Departements" CASCADE;
-- DROP TABLE IF EXISTS "Age" CASCADE;

-- --Supprimer la table "Age" si elle existe
-- --pour la suppression des tables et ça fonctionne trés bien: 
-- DROP TABLE IF EXISTS "De" CASCADE;

-- DROP TABLE IF EXISTS "D" CASCADE;

-- DROP TABLE IF EXISTS "Dep";
-- DROP TABLE IF EXISTS "d";
-- DROP TABLE IF EXISTS "departements";
-- DROP TABLE IF EXISTS "prix";
-- DROP TABLE IF EXISTS "urgences";

, parameters: None
[2023-11-22T16:57:56.540+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/operators/sql.py", line 280, in execute
    output = hook.run(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 392, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 423, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.SyntaxError: syntax error at or near "age"
LINE 20:    age VARCHAR(255)
            ^

[2023-11-22T16:57:56.554+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=Projet1, task_id=create_table, execution_date=20231122T165749, start_date=20231122T165756, end_date=20231122T165756
[2023-11-22T16:57:56.578+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 414 for task create_table (syntax error at or near "age"
LINE 20:    age VARCHAR(255)
            ^
; 3222)
[2023-11-22T16:57:56.589+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-11-22T16:57:56.618+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
